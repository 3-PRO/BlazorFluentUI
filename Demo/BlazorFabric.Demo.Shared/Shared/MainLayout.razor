@using Microsoft.AspNetCore.Components
@inherits LayoutComponentBase


<Stack Horizontal="true" Style="width:100%;">
    <ResponsiveLayout MinWidth="ResponsiveMode.Medium.ToMinCssValue()">
        <StackItem Grow="0" DisableShrink="true" Style="height:100%;overflow:hidden;">
            <NavMenu />
        </StackItem>
    </ResponsiveLayout>


    <StackItem Grow="1" Style="overflow:hidden">
        <Stack VerticalFill="true" Style="width:100%;">

            <ResponsiveLayout MaxWidth="ResponsiveMode.Medium.ToMaxCssValue()">
                <StackItem Grow="0" VerticalFill="false">
                    <IconButton IconName="GlobalNavButton" OnClick=@ShowMenu />
                </StackItem>
            </ResponsiveLayout>

            <ResponsiveLayout MinWidth="ResponsiveMode.Medium.ToMinCssValue()">
                <Stack Horizontal="true" HorizontalAlign="Alignment.SpaceBetween" VerticalAlign="Alignment.Center" Style="width:100%">
                    <StackItem Grow="0" VerticalFill="false">
                        <div class="top-row">
                            <Link Href="https://github.com/limefrogyank/BlazorFabric" Target="_blank">View GitHub repo of BlazorFabric...</Link>
                        </div>
                    </StackItem>
                    <StackItem DisableShrink="true">
                        <Toggle Checked=customTheme CheckedChanged="@SwitchTheme" OnText="Dark Theme" OffText="Default Theme" />
                    </StackItem>
                </Stack>
            </ResponsiveLayout>

            <StackItem Grow="1" Tokens="new StackItemTokens { Padding = ((int)CurrentMode <= (int)ResponsiveMode.Medium ? 10 : 0) }" Style="overflow-y:auto;">
                @Body
            </StackItem>
        </Stack>

        <ResponsiveLayout MaxWidth="ResponsiveMode.Medium.ToMaxCssValue()">
            <Panel Type=@PanelType.SmallFixedNear OnDismiss=@(()=>isPanelOpen = false) IsOpen=@isPanelOpen IsLightDismiss="true">
                <NavigationTemplate>
                    <IconButton IconName="GlobalNavButton" OnClick=@(()=> isPanelOpen = false) />
                    <Link Href="https://github.com/limefrogyank/BlazorFabric" Target="_blank">View GitHub repo of BlazorFabric...</Link>
                </NavigationTemplate>
                <ChildContent>
                    <NavMenu OnLinkClicked=@OnNavLinkClick />
                </ChildContent>
            </Panel>
        </ResponsiveLayout>

    </StackItem>

</Stack>

@code {

    [Inject]
    public ThemeProvider ThemeProvider { get; set; }

    private bool customTheme;

    protected override void OnInitialized()
    {
        customTheme = ThemeProvider.Theme.Palette.GetType() == typeof(DefaultPaletteDark);
        base.OnInitialized();
    }

    private Task SwitchTheme(bool checkedState)
    {
        customTheme = checkedState;
        if (checkedState)
        {
            var palette = new DefaultPaletteDark();
            ThemeProvider.UpdateTheme(palette, new DefaultSemanticColorsDark(palette), new DefaultSemanticTextColorsDark(palette));
        }
        else
        {
            ThemeProvider.UpdateTheme(new DefaultPalette());
        }
        return Task.CompletedTask;
    }

    private bool isMenuCollapsed = true;
    private bool isPanelOpen = false;

    [CascadingParameter] public ResponsiveMode CurrentMode { get; set; }

    void ShowMenu()
    {
        isPanelOpen = true;
    }

    void HideMenu()
    {
        isPanelOpen = false;
    }

    void OnNavLinkClick(NavFabricLink linkBase)
    {
        isPanelOpen = false;
    }


}