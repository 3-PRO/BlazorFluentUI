@namespace BlazorFabric
@inherits FabricComponentBase
@typeparam TItem

@*@if(SubGroupSelector == null)
{
    list = b =>
    {
        <List ItemsSource=@ItemsSource
              >
            <ItemTemplate>
                @if(RowTemplate != null)
                {
                    RowTemplate(context);
                }
                else
                {
                    <DetailsRow Item=@context.Item
                                ItemIndex=@context.Index
                                SelectionMode=@SelectionMode
                                Selection=@Selection
                                Compact=@Compact
                                CheckboxVisibility=@CheckboxVisibility
                                />
                }
            </ItemTemplate>
        </List>
    };
}
else
{
    list = b =>
    {
        <GroupedList ItemsSource=@ItemsSource
                     SubGroupSelector=@SubGroupSelector
                     GroupTitleSelector=@GroupTitleSelector
                     SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)
                     >
            <ItemTemplate>
                <DetailsRow Item=@context.Item
                            ItemIndex=@context.Index
                            SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)
                            Selection=@Selection
                            CheckboxVisibility=@CheckboxVisibility
                            Compact=@Compact 
                            />
            </ItemTemplate>
        </GroupedList>
    };
}*@

<div class=@($"ms-DetailsList {ClassName}")
     style=@($"overflow-y:hidden;height:100%;{Style}")
     aria-label=@AriaLabel
     >
    <div role="grid"
         aria-label=@AriaLabel
         aria-rowcount=""
         aria-colcount=""
         aria-readonly=true
         style="overflow-y:hidden;height:100%;">
        <div @onkeydown=@OnHeaderKeyDown 
             role="presentation"
             class="ms-DetailsList-headerWrapper">
            @if (IsHeaderVisible)
            {
                @if (HeaderTemplate != null)
                {
                    @HeaderTemplate
                }
                else
                {
                    <DetailsHeader Columns=@_adjustedColumns/>
                }
            }
        </div>
        <div @onkeydown=@OnContentKeyDown
             role="presentation"
             class="ms-DetailsList-contentWrapper"
             style="overflow-y:hidden;height:100%;">
            <FocusZone ClassName="ms-DetailsList-focusZone"
                       Direction="FocusZoneDirection.Vertical"
                       InnerZoneKeystrokeTriggers="new System.Collections.Generic.List<ConsoleKey> { ConsoleKey.RightArrow }"
                       Style="height:100%;overflow-y:hidden;">
                @if (!DisableSelectionZone)
                {
                <SelectionZone Selection=@Selection
                               SelectionChanged=@SelectionChanged
                               SelectionPreservedOnEmptyClick=@SelectionPreservedOnEmptyClick
                               SelectionMode=@SelectionMode
                               OnItemInvoked=@OnItemInvoked
                               OnItemContextMenu=@OnItemContextMenu
                               EnterModalOnTouch=@EnterModalSelectionOnTouch
                               Style="height:100%;overflow-y:hidden;">
                    @if (SubGroupSelector == null)
                    {
                        <List ItemsSource=@ItemsSource
                              OnViewportChanged=@ViewportChangedHandler>
                            <ItemTemplate>
                                @if (RowTemplate != null)
                                {
                                    RowTemplate(context);
                                }
                                else
                                {
                                    <DetailsRow Item=@context.Item
                                                ItemIndex=@context.Index
                                                Columns=@_adjustedColumns
                                                SelectionMode=@SelectionMode
                                                Selection=@Selection
                                                Compact=@Compact
                                                CheckboxVisibility=@CheckboxVisibility />
                                }
                            </ItemTemplate>
                        </List>
                    }
                    else
                    {
                        <GroupedList ItemsSource=@ItemsSource
                                     SubGroupSelector=@SubGroupSelector
                                     GroupTitleSelector=@GroupTitleSelector
                                     SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)>
                            <ItemTemplate>
                                <DetailsRow Item=@context.Item
                                            ItemIndex=@context.Index
                                            Columns=@_adjustedColumns
                                            SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)
                                            Selection=@Selection
                                            CheckboxVisibility=@CheckboxVisibility
                                            Compact=@Compact />
                            </ItemTemplate>
                        </GroupedList>
                    }
                </SelectionZone>

                }
                else
                {
                    @if (SubGroupSelector == null)
                    {

                    }
                    else
                    {

                    }
                }
            </FocusZone>
        </div>
        @if (FooterTemplate != null)
        {
            @FooterTemplate
        }
    </div>
</div>
