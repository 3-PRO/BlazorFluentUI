@inherits ComponentBase

@using Microsoft.JSInterop

@inject IJSRuntime JSRuntime

<div @ref="rootElement"
     role="listitem"
     class=@($"ms-List-cell fabricList-item {(IsActive ? "is-active" : "")}")
     @onclick="@(e=>OnItemClick(e))">
    @ChildContent
</div>

@functions{
    ElementRef rootElement;

    public double Width { get; set; }
    public double Height { get; set; }

    [Parameter] object Item { get; set; }

    [Parameter] bool IsActive { get; set; }

    [Parameter] int IndexPosition { get; set; }

    [Parameter] RenderFragment ChildContent { get; set; }

    [Parameter]
    private Func<object, UIMouseEventArgs, Task> ItemClicked { get; set; }
    
    protected override async Task OnAfterRenderAsync()
    {
        //var result = await JSRuntime.InvokeAsync<Dictionary<string, double>>("BlazorFabricList.measureElement", rootElement);
        //this.Width = result["width"];
        //this.Height = result["height"];
        await base.OnAfterRenderAsync();
    }

    private Task OnItemClick(UIMouseEventArgs e)
    {

        return ItemClicked.Invoke(this.Item, e);
    }
}