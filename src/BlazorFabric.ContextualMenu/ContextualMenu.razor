@using Microsoft.AspNetCore.Components.Web
@inherits ContextualMenuBase<TItem>

@typeparam TItem


<BlazorFabric.Callout.Callout FabricComponentTarget=@FabricComponentTarget
                              IsBeakVisible=@IsBeakVisible
                              BeakWidth=@BeakWidth
                              DirectionalHint=@DirectionalHint
                              GapSpace=@GapSpace
                              CoverTarget=@CoverTarget
                              ClassName="ms-ContextualMenu-callout"
                              Bounds=@Bounds
                              DirectionalHintFixed=@DirectionalHintFixed
                              AlignTargetEdge=@AlignTargetEdge
                              OnDismiss=@DismissHandler
                              >
    @*TabIndex set to -1 so it is focusable, ignoring option to focus on "container??"*@
    <div aria-label=@AriaLabel
         style=""
         tabindex="-1" 
         class="ms-ContextualMenu-container">
        @if (Title != null)
        {
            <div class="ms-ContextMenu-title">
                @Title
            </div>
        }
        @if (ItemsSource != null && ItemsSource.Count() > 0)
        {
            <div class=@($"ms-ContextualMenu mediumFont {(this.IsOpen ? "is-open" : "")}")>
                <CascadingValue Value=@this>
                    <ul class="ms-ContextualMenu-list" role="menu">
                        @foreach (var menuItem in ItemsSource)
                        {
                            @MenuItemTemplate(menuItem)
                        }
                    </ul>
                </CascadingValue>
            </div>
        }
        else
        {
            <div class=@($"ms-ContextualMenu mediumFont {(this.IsOpen ? "is-open" : "")}")>
                <CascadingValue Value=@this>
                    <ul class="ms-ContextualMenu-list" role="menu">
                        @ChildContent
                    </ul>
                </CascadingValue>
            </div>
        }

    </div>

</BlazorFabric.Callout.Callout>