@namespace BlazorFabric
@inherits FabricComponentBase
@typeparam TItem

<div class="ms-DetailRow-fields"
     data-automationid="DetailsRowFeilds"
     role="presentation">
    @for(var index=0; index<Columns.Count(); index++)
    {
        var column = Columns.ElementAt(index);
        // generate a key that auto-dirties when content changes, to force the container to re-render, to trigger animation
        //string key = $"{column.key}${(cellValueKey != null ? "-${ cellValueKey}" : "")}";
        <div 
             role=@(column.IsRowHeader ? "rowheader" : "gridcell")
             aria-readonly="true"
             aria-colindex=@(index + ColumnStartIndex + 1)
             class=@($"ms-DetailRow-field{(column.IsMultiline ? " is-multiline":"")}{(column.IsRowHeader ? " is-rowHeader":"")} ms-DetailsRow-cell{(column.IsPadded ? " is-padded":"")}")
             style="width:20px;"

             >
            @if (column.ColumnItemTemplate != null)
            {
                column.ColumnItemTemplate(column.FieldSelector(Item));
            }
            else
            {
                @: @(column.FieldSelector(Item).ToString())
            }
        </div>
    }

</div>