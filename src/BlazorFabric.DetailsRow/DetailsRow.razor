@namespace BlazorFabric
@inherits FabricComponentBase
@typeparam TItem

<GlobalCS Component=@this CreateGlobalCss=@CreateGlobalCss />
<LocalCS @bind-Rules=@DetailsRowLocalRules />

<FocusZone Direction=@FocusZoneDirection.Horizontal
           AriaLabel=@AriaLabel
           AriaDescribedBy=@AriaDescribedBy
           ClassName=@($"fadeIn400 smallFont {(Compact ? "is-compact " : "")}{(isSelected ? "is-selected " : "")}{(IsRowHeader ? "is-row-header " : "")}{(IsCheckVisible ? "is-check-visible " : "")}ms-DetailsRow")
           AllowFocusRoot="true">

    @if (showCheckbox)
    {
        <div role="gridcell" aria-colindex="1" data-selection-toggle="true" class="ms-DetailsRow-checkCell">
            <DetailsRowCheck IsVisible=@(this.CheckboxVisibility == CheckboxVisibility.Always)
                             Compact=@Compact
                             Checked=@isSelected
                             UseFastIcons="true"
                             CanSelect=@canSelect />
        </div>
    }

    <GroupSpacer IndentWidth=@IndentWidth
                 Count=@GroupNestingDepth />

    @if (Item != null)
    {
        <DetailsRowFields Item=@Item
                          ItemIndex=@ItemIndex
                          Columns=@Columns
                          ColumnStartIndex=@((showCheckbox ? 1 : 0)) />

        @if (columnMeasureInfo != null)
        {
            <span role="presentation" class="ms-DetailsRow-cellMeasurer ms-DetailsRow-cell">
                <DetailsRowFields Item=@Item
                                  ItemIndex=@ItemIndex
                                  Columns=@Columns
                                  ColumnStartIndex=@((showCheckbox ? 1 : 0) + Columns.Count()) />
            </span>
        }
    }

    <span role="checkbox" class="@($"ms-DetailsRow-checkCover {_localCheckCoverRule.Selector.SelectorName}")" aria-checked=@isSelected data-selection-toggle="true" />

</FocusZone>