@namespace BlazorFluentUI
@inherits BFUComponentBase
@typeparam TItem
@using System.Linq

<div class=@($"ms-DetailsList {ClassName}")
     style=@($"overflow-y:hidden;height:100%;{Style}")
     aria-label=@AriaLabel
     >
    <div role="grid"
         aria-label=@AriaLabel
         aria-rowcount=""
         aria-colcount=""
         aria-readonly=true
         style="overflow-y:hidden;height:100%;display:flex;flex-direction:column;">
        <div 
             role="presentation"
             class="ms-DetailsList-headerWrapper">
            @if (IsHeaderVisible)
            {
                @if (HeaderTemplate != null)
                {
                    @HeaderTemplate
                }
                else
                {
                    <BFUDetailsHeader Columns=@_adjustedColumns
                                   TItem="TItem"
                                   IsAllSelected=@(ShouldAllBeSelected())
                                   OnAllSelected=@OnAllSelected
                                   OnColumnAutoResized=@OnColumnAutoResized
                                   OnColumnResized=@OnColumnResizedInternal
                                      CheckboxVisibility=@CheckboxVisibility
                                      OnColumnClick=@OnColumnClick
                                      SelectAllVisibility=@selectAllVisibility />
                }
            }
        </div>
        <div 
             role="presentation"
             class="ms-DetailsList-contentWrapper"
             style="overflow-y:hidden;height:100%;">
            <BFUFocusZone ClassName="ms-DetailsList-focusZone"
                       Direction="FocusZoneDirection.Vertical"
                       InnerZoneKeystrokeTriggers="new System.Collections.Generic.List<ConsoleKey> { ConsoleKey.RightArrow }"
                       Style="height:100%;overflow-y:hidden;">
                @if (!DisableSelectionZone)
                {
                    <BFUSelectionZone Selection=@Selection
                                   @ref="selectionZone"
                                      DisableRenderOnSelectionChanged="true"
                                   SelectionChanged=@SelectionChanged
                                   SelectionPreservedOnEmptyClick=@SelectionPreservedOnEmptyClick
                                   SelectionMode=@SelectionMode
                                   OnItemInvoked=@OnItemInvoked
                                   OnItemContextMenu=@OnItemContextMenu
                                   EnterModalOnTouch=@EnterModalSelectionOnTouch
                                   Style="height:100%;overflow-y:hidden;">
                        @if (SubGroupSelector == null)
                        {
                            <BFUList ItemsSource=@items
                                     IsVirtualizing=@IsVirtualizing
                                  OnViewportChanged=@ViewportChangedHandler>
                                <ItemTemplate>
                                    @if (RowTemplate != null)
                                    {
                                        RowTemplate(context);
                                    }
                                    else
                                    {
                                        <BFUDetailsRow Item=@context.Item
                                                       ItemIndex=@context.Index
                                                    Columns=@_adjustedColumns
                                                    SelectionMode=@SelectionMode
                                                    
                                                    Compact=@Compact
                                                    CheckboxVisibility=@CheckboxVisibility />
                                    }
                                </ItemTemplate>
                            </BFUList>
                        }
                        else
                        {
                            <BFUGroupedList ItemsSource=@items
                                         @ref=@groupedList
                                         OnViewportChanged=@ViewportChangedHandler
                                         SubGroupSelector=@SubGroupSelector
                                         GroupTitleSelector=@GroupTitleSelector
                                         IsVirtualizing=@IsVirtualizing
                                            TItem="TItem"
                                            OnGeneratedListItems=@(OnGroupedListGeneratedItems)
                                         SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)>
                                <ItemTemplate>
                                    <BFUDetailsRow Item=@context.Item.Item
                                                   ItemIndex=@context.Index
                                                Columns=@_adjustedColumns
                                                SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)
                                                
                                                CheckboxVisibility=@CheckboxVisibility
                                                Compact=@Compact />
                                </ItemTemplate>
                            </BFUGroupedList>
                        }
                    </BFUSelectionZone>

                }
                else
                {
                    @if (SubGroupSelector == null)
                    {
                        <BFUList ItemsSource=@items
                              OnViewportChanged=@ViewportChangedHandler>
                            <ItemTemplate>
                                @if (RowTemplate != null)
                                {
                                    RowTemplate(context);
                                }
                                else
                                {
                                    <BFUDetailsRow Item=@context.Item
                                                   ItemIndex=@context.Index
                                                   TItem="TItem"
                                                Columns=@_adjustedColumns
                                                SelectionMode=@SelectionMode
                                                Selection=@Selection
                                                Compact=@Compact
                                                CheckboxVisibility=@CheckboxVisibility />
                                }
                            </ItemTemplate>
                        </BFUList>
                    }
                    else
                    {
                        <BFUGroupedList ItemsSource=@items
                                     @ref=@groupedList
                                     OnViewportChanged=@ViewportChangedHandler
                                     SubGroupSelector=@SubGroupSelector
                                     GroupTitleSelector=@GroupTitleSelector
                                     Selection=@Selection
                                     SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)>
                            <ItemTemplate>
                                <BFUDetailsRow Item=@context.Item.Item
                                            ItemIndex=@context.Index
                                            Columns=@_adjustedColumns
                                            SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)
                                            Selection=@Selection
                                            CheckboxVisibility=@CheckboxVisibility
                                            Compact=@Compact />
                            </ItemTemplate>
                        </BFUGroupedList>
                    }
                }
            </BFUFocusZone>
        </div>
        @if (FooterTemplate != null)
        {
            @FooterTemplate
        }
    </div>
</div>
