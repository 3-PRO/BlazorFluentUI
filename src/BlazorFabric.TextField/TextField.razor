@namespace BlazorFabric
@inherits FabricComponentBase

@using Microsoft.AspNetCore.Components.Web

<div class=@($"ms-TextField mediumFont normalize {(this.Underlined ? "ms-TextField--underlined" : "")} {(!string.IsNullOrWhiteSpace(this.ErrorMessage) ? "has-error" : "")} {(this.Disabled ? "is-disabled" : "")} {(this.Multiline ? "ms-TextField--multiline" : "")} {(this.Borderless ? "ms-TextField--borderless" : "")} {(!this.Resizable ? "ms-TextField--unresizable" : "")}  {(this.isFocused ? "is-focused" : "")} {(this.Required ? "is-required" : "")} {(this.Label == null ? "no-label" : "")} {(this.AutoAdjustHeight ? "auto-adjust-height" : "" )}")
     style=@Style
     @ref="RootElementReference"
     @onclick="OnClick">
    <div class="ms-TextField-wrapper">
        @if (this.Label != null)
        {
            <Label Required=@this.Required HtmlFor=@this.id Disabled=@this.Disabled>@(this.Label + (this.Underlined ? ":" : ""))</Label>
        }
        <div class="ms-TextField-fieldGroup">
            @if (this.Prefix != null)
            {
                <div class="ms-TextField-prefix">
                    <span style="padding-bottom: 1px;">@this.Prefix</span>
                </div>
            }
            @if (this.Multiline)
            {
                <textarea id=@this.id
                          @ref="textAreaRef"
                          style=@inlineTextAreaStyle
                          value=@Value
                          @oninput=@OnInputIntern
                          @onchange=@OnChangeIntern
                          class="mediumFont ms-TextField-field"
                          aria-label=@AriaLabel
                          aria-describedby=@this.descriptionId
                          aria-invalid=@(!string.IsNullOrWhiteSpace(this.ErrorMessage) ? true : false)
                          readOnly=@this.ReadOnly
                          placeholder=@this.Placeholder
                          disabled=@this.Disabled
                          resizable=false
                          @onkeydown=@OnKeyDown
                          @onkeyup=@OnKeyUp
                          @onkeypress=@OnKeyPress
                          @onmousedown=@OnMouseDown
                          @onmouseup=@OnMouseUp
                          @onpaste=@OnPaste
                          @onfocus=@OnFocusInternal
                          @onblur=@OnBlurInternal
                          @attributes=@UnknownParameters />
            }
            else
            {
                <input type="@TypeUtils.InputMap[this.InputType]"
                       id=@this.id
                       @ref="textAreaRef"
                       @bind-value=@Value
                       @oninput=@OnInputIntern
                       autocomplete=@GetAutoCompleteString()
                       class="mediumFont ms-TextField-field"
                       aria-label=@AriaLabel
                       aria-describedby=@this.descriptionId
                       aria-invalid=@(!string.IsNullOrWhiteSpace(this.ErrorMessage) ? true : false)
                       readOnly=@this.ReadOnly
                       placeholder=@this.Placeholder
                       disabled=@this.Disabled
                       @onkeydown=@OnKeyDown
                       @onkeyup=@OnKeyUp
                       @onkeypress=@OnKeyPress
                       @onmousedown=@OnMouseDown
                       @onmouseup=@OnMouseUp
                       @onpaste=@OnPaste
                       @onfocus=@OnFocusInternal
                       @onblur=@OnBlurInternal
                       @attributes=@UnknownParameters />
            }
            @if (!string.IsNullOrWhiteSpace(IconName))
            {
                <Icon ClassName="ms-TextField-icon" IconName=@IconName />
            }
            @if (this.Suffix != null)
            {
                <div class="ms-TextField-suffix">
                    <span style="padding-bottom: 1px;">@this.Suffix</span>
                </div>
            }
        </div>
    </div>
    @if (!string.IsNullOrWhiteSpace(this.Description) || !string.IsNullOrWhiteSpace(this.ErrorMessage))
    {
        <span id="descriptionId">
            <span class="ms-TextField-description">@this.Description</span>
            @if (!string.IsNullOrWhiteSpace(this.ErrorMessage))
            {
                <div role="alert">
                    <BlazorFabric.DelayedRender Delay="100">
                        <p class="slideDownIn20 smallFont ms-TextField--errorMessage">
                            <span data-automation-id="error-message">@this.ErrorMessage</span>
                        </p>
                    </BlazorFabric.DelayedRender>
                </div>
            }
        </span>
    }
</div>