@namespace BlazorFluentUI
@inherits BFUComponentBase
@typeparam TItem

<BFUFocusZone Direction="FocusZoneDirection.Vertical"
              ClassName="ms-GroupedList">
    @if (dataItems != null)
    {
        <BFUList TItem="GroupedListItem<TItem>"
                 @ref="listReference"
                 ClassName=@($"ms-GroupedList{(string.IsNullOrEmpty(ClassName) ? "" : " " + ClassName)}")
                 IsVirtualizing=@IsVirtualizing
                 ItemsSource=@dataItems

                 >
            <ItemTemplate>

                @if (context is HeaderItem<TItem>)
                {
                    var header = (HeaderItem<TItem>)context.Item;
                    <BFUGroupHeader IsOpen=@header.IsOpen
                                    OnOpenChanged=@((isOpen)=>header.IsOpen = isOpen)
                                    Count=@header.RecursiveCount
                                    GroupLevel=@header.Depth
                                    Name=@header.Name
                                    Compact=@Compact
                                    IsSelectionCheckVisible=@(SelectionZone != null)
                                    OnClick=@(()=>OnHeaderClicked(header))
                                    OnToggle=@(()=>OnHeaderToggled(header)) />
                }
                else
                {
                    @ItemTemplate(context.Item)
                }
            </ItemTemplate>
        </BFUList>

    }
</BFUFocusZone>