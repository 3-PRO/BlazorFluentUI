
@page  "/overflowSetPage"
@using Models
<h3>OverflowSetPage</h3>

<OverflowSet Items=@items OverflowItems=@items GetKey=@(x=> x.Key)>
    <ItemTemplate>
        <CommandBarButton IconName="Add" Text=@context.Name />
    </ItemTemplate>
    <OverflowTemplate>
        <IconButton HideChevron="true" Style="min-width: 0; padding: 0 4px; align-self: stretch; height: auto;" IconName="More" MenuItems=@(itemTransform(context)) />
    </OverflowTemplate>
    @*<OverflowTemplate>
        <IconButton HideChevron="true" Style="min-width: 0; padding: 0 4px; align-self: stretch; height: auto;" IconName="More" MenuItems=@OverflowItems>
            <ContextualMenuContent>
                @foreach (var item in OverflowItems)
                        {
                <div @key=(GetKey(item)) class="ms-OverflowSet-item">
                    @OverflowItemTemplate(item)
                </div>
                        }
            </ContextualMenuContent>
        </IconButton>
    </OverflowTemplate>*@
</OverflowSet>

@code {
        System.Collections.Generic.List<OverflowItem> items;

        Func<IEnumerable<OverflowItem>, IEnumerable<IContextualMenuItem>> itemTransform => (items) =>
        {
            var menuItems = new System.Collections.Generic.List<IContextualMenuItem>();
            foreach (var item in items)
            {
                var menuItem = new ContextualMenuItem()
                {
                    Key = item.Key,
                    Text = item.Name,
                    IconName = "Add"
                };
                menuItems.Add(menuItem);
            }
            return menuItems;
        };

    protected override Task OnInitializedAsync()
    {
        items = new System.Collections.Generic.List<OverflowItem>();
        for (int i = 0; i<10; i++)
        {
            items.Add(new OverflowItem(i));
        }

        return Task.CompletedTask;
    }
}
