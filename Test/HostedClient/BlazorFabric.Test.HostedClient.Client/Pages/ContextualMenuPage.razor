@page "/contextualMenuPage"

@using Models

<h1>ContextualMenu</h1>

<DefaultButton Text="Show ContextualMenu" >
    <ContextualMenuContent>
        @*<ContextualMenu TItem="object" FabricComponentTarget=@buttonRef>*@
        <ContextualMenuItem Text="Header1" ItemType=@ContextualMenuItemType.Header />
        <ContextualMenuItem Text="Test1" />
        <ContextualMenuItem Text="Test2" />
        <ContextualMenuItem ItemType=@ContextualMenuItemType.Divider />
        <ContextualMenuItem Text="Test3" />
        @*</ContextualMenu>*@
    </ContextualMenuContent>
</DefaultButton>

<h3>Starting to look good.  Finish Header, Section, submenu, and wire up events properly</h3>
       

@code {

string uncontrolledSingleSelectionResult;
List<string> uncontrolledMultiSelectionResult = new List<string>();

List<string> controlledSingleSelectionResult = new List<string> { "Third" };
List<string> controlledMultiSelectionResult = new List<string> { "Second", "Third" };

List<DataItem> items;

protected override Task OnInitAsync()
{
    items = new List<DataItem>
{
            new DataItem("First"),
            new DataItem("Second"),
            new DataItem("Third"),
            new DataItem("Fourth"),
            new DataItem("Fifth")
        };
    return base.OnInitAsync();
}

void UncontrolledSingleChangeHandler((string key, bool isAdded) args)
{
    uncontrolledSingleSelectionResult = args.key;
}

void UncontrolledMultiChangeHandler((string key, bool isAdded) args)
{
    if (args.isAdded)
        uncontrolledMultiSelectionResult.Add(args.key);
    else
        uncontrolledMultiSelectionResult.Remove(args.key);
}

}
